<style>
    #avatar-input{
        position: absolute;
        opacity: 0;
        left: 0;
        width: 100%;
        top: 0;
        height: 100%;
    }
    .avatar-progress {
        margin-top: 5px;
        display: none;
    }
    .img-container img {
        max-width: 100%;
    }
    .img-container {
        margin-bottom: 0 !important;
    }
    #modalLabel
    {
        display: inline-block;

    }
</style>

<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Crop the image</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="img-container">
                    <img id="image" src="https://avatars0.githubusercontent.com/u/3456749">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="crop">Crop</button>
            </div>
        </div>
    </div>
</div>
<script>

    var avatar = document.getElementById('avatar-image');
    var input = document.getElementById('image-input');
    var modal = $('#modal');

    var avatarWidth = (imgtype == 'avatar')? 160: 120;
    var avatarHeight = avatarWidth;

    input.addEventListener('change', function (e) {
        var files = e.target.files;
        var done = function (url) {
            input.value = '';
            image.src = url;
            modal.modal('show');
        };
        var reader;
        var file;
        var url;

        if (files && files.length > 0) {
            file = files[0];

            if (URL) {
                done(URL.createObjectURL(file));
            } else if (FileReader) {
                reader = new FileReader();
                reader.onload = function (e) {
                    done(reader.result);
                };
                reader.readAsDataURL(file);
            }
        }
    });

    modal.on('shown.bs.modal', function () {
        cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
        });
    }).on('hidden.bs.modal', function () {
        cropper.destroy();
        cropper = null;
    });

    document.getElementById('crop').addEventListener('click', function () {
        var initialAvatarURL;
        var canvas;

        modal.modal('hide');

        if (cropper) {
            canvas = cropper.getCroppedCanvas({
                width: avatarWidth,
                height: avatarHeight,
            });

            initialAvatarURL = avatar.src;
            avatar.src = canvas.toDataURL();
            canvas.toBlob(function (blob) {
                var formData = new FormData();

                formData.append('file', blob);
                formData.append('imgtype', imgtype);

                $.ajax({
                    url:'/upload/image',
                    type: 'post',
                    data: formData,
                    processData: false,
                    contentType: false,
                    xhr: function () {
                        var xhr = new XMLHttpRequest();
                        xhr.upload.onprogress = function (e) {
                            if (e.lengthComputable) {
                                var percent = Math.round((e.loaded / e.total) * 100);
                                console.log(percent)
                            }
                        };
                        return xhr;
                    },

                    success: function (res) {
                        if(res.status=='success'){
                            avatar.src = res.data;
                            if(imgtype !="avatar"){
                                $('#chatbot-icon img').attr('src',res.data);
                                makeChatBotIcon();
                            }

                            $('#avatar_path').val(res.data);
                        }else{
                            alert(res.data);
                        }
                    },
                    error: function () {
                        avatar.src = initialAvatarURL;
                        alert('Avatar Image uploading failed!');
                    },
                    complete: function () {
                        // progress.hide();
                    },
                });
            });
        }
    });
</script>
